name: Create Release

on:
  push:
    branches:
      - master

jobs:
  release:
    if: github.repository_owner == 'Mooy1'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4

      - uses: actions/setup-java@v2.3.0
        with:
          distribution: adopt
          java-version: '8'
          cache: 'maven'

      - run: mvn package --file pom.xml

      - uses: nrwl/last-successful-commit-action@v1
        id: last_commit
        with:
          branch: master
          workflow_id: release.yml
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - run: |
          newVersion=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "New Version: $newVersion"
          echo ::set-output name=new-version::$newVersion
          git checkout ${{ steps.last_commit.outputs.commit_hash }}
          oldVersion=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Old Version: $oldVersion"
          echo ::set-output name=old-version::$oldVersion
        id: version

      - uses: madhead/semver-utils@1.4.3
        id: comparison
        with:
          version: ${{ steps.version.outputs.new-version }}
          compare-to: ${{ steps.version.outputs.old-version }}

      - run: '[[ ">" == "${{ steps.comparison.outputs.comparison-result }}" ]]'

      - uses: Bullrich/generate-release-changelog@2.0.1
        if: steps.version.outputs.version != '0.0.1'
        id: changelog
        env:
          REPO: ${{ github.repository }}

      - uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.new-version }}
          release_name: Release v${{ steps.version.outputs.new-version }}
          body: ${{ steps.changelog.outputs.changelog }}
